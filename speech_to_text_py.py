# -*- coding: utf-8 -*-
"""speech_to_text.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u75agyj0CHm44yVSpf1MFrgn9wr4S4nA
"""

!pip install SpeechRecognition pydub
!pip install transformers torchaudio
!apt install ffmpeg  # needed for audio conversions
!pip install faster-whisper
!pip install indic-transliteration
!pip install deep-translator
!pip install git+https://github.com/openai/whisper.git

from google.colab import files

uploaded = files.upload()

import whisper
from indic_transliteration.sanscript import transliterate, DEVANAGARI, ITRANS
from deep_translator import GoogleTranslator
import os
import speech_recognition as sr
from pydub import AudioSegment

# List of supported audio file extensions
audio_extensions = ('.wav', '.mp3', '.flac', '.aiff')

# Find first matching audio file in the directory
audio_files = [files for files in os.listdir() if files.lower().endswith(audio_extensions)]
model = whisper.load_model("base")
if not audio_files:
    print("No supported audio file found.")
else:
    original_file = audio_files[0] #Changed index to 0 to ensure it matches an existing file
    print(f"Found audio file: {original_file}")

    # Check if the file is an MP3 and convert it to WAV if necessary
    if original_file.lower().endswith(".mp3"):
        # Convert MP3 to WAV using pydub
        sound = AudioSegment.from_mp3(original_file)
        original_file = original_file.replace(".mp3", ".wav") #Changing to ensure it uses .wav extention.
        sound.export(original_file, format="wav") #Saving the converted file

    recognizer = sr.Recognizer()

    with sr.AudioFile(original_file) as source:
        audio = recognizer.record(source)

    try:
        # Transcribe using whisper
       result = model.transcribe(original_file, language="hi") #changed audio_extensions to the path of the file
       print("Transcription:\n", result["text"])
       romanized = transliterate(hindi_text, DEVANAGARI, ITRANS)
       print("\n Romanized Pronunciation:")
       print(romanized)
       translated = GoogleTranslator(source='hi', target='en').translate(hindi_text)
       print("\n English Meaning:")
       print(translated)
    except sr.UnknownValueError:
        print("Could not understand the audio")
    except sr.RequestError as e:
        print(f"Request error: {e}")